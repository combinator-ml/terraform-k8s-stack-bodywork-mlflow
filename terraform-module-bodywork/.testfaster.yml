name: Bodywork
base:
  kernel_image: quay.io/testfaster/ignite-kernel
  os_dockerfile: |-
    # This dockerfile defines the base disk image for your VMs
    FROM quay.io/testfaster/kube-ubuntu
    ENV bump-cache 1
    RUN apt-get update
    RUN apt install gnupg2 software-properties-common rsync -y
    RUN curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add -
    RUN apt-add-repository "deb [arch=$(dpkg --print-architecture)] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
    RUN apt install terraform -y
    RUN apt install python3-pip -y
    RUN pip3 install bodywork==2.0.6
  docker_bake_script: |-
    # Do things that cache docker images for faster builds,
    # like building a prior version of your software.
    # Docker buildkit cache is preserved!
    #!/bin/bash
    set -euo pipefail
    docker pull busybox:1.32.0
  preload_docker_images: []
  prewarm_script: |-
    # This gets run after each individual VM starts up, so
    # start services you need in your tests here and they'll be
    # already running when you testctl get
    #!/bin/bash
    set -euo pipefail
    git clone https://github.com/combinator-ml/terraform-k8s-stack-bodywork-mlflow
    cd terraform-k8s-stack-bodywork-mlflow
    git checkout d029e330a46ea1f11a4251ab045012ec7dc13a4f
    cd terraform-module-bodywork
    terraform init
    terraform apply -auto-approve
    # TODO: port this to terraform
    kubectl apply -f deploy.yaml
    bodywork setup-namespace bodywork
    bodywork secret create \
        --namespace=bodywork \
        --name=mlflow-credentials \
        --data MLFLOW_TRACKING_URI=http://mlflow.mlflow.svc.cluster.local:5000 \
            MLFLOW_S3_ENDPOINT_URL=http://minio.mlflow.svc.cluster.local:9000 \
            AWS_ACCESS_KEY_ID=minio \
            AWS_SECRET_ACCESS_KEY=minio123


  # Need kube 1.17 for kubeflow last time I checked (1.18 doesn't work).
  # https://github.com/kubeflow/kubeflow/issues/5246#issuecomment-682013220
  kubernetes_version: v1.17.11

runtime:
  cpus: 4
  memory: 12GB
  disk: 50GB
# How many ready VMs to keep running for instant testctl get
prewarm_pool_size: 1
# Upper bound for pool size, e.g. to keep memory usage sensible
max_pool_size: 2
# Timeout VMs after this long. Set to "" if you want to use
# the VMs for long running development purposes rather than
# short-lived CI.
default_lease_timeout: ""
pool_sleep_timeout: "never"
shared: true

launch:
  title: Bodywork + MLflow
  buttons:
    - title: MLflow
      port: 30600
   #- title: Model
   #  port: 30600 <- change this!
  homepage: |
    ## Follow the tutorial below
    Click the buttons to the left to launch the MLflow web interface. See the tutorial below on how to use these to see Bodywork in action!

    Try this:
    ```
    bodywork workflow \
      --namespace=bodywork \
      https://github.com/bodywork-ml/bodywork-pipeline-with-mlflow \
      master
    ```
